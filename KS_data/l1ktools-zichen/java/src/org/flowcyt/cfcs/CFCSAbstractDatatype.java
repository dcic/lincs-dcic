package org.flowcyt.cfcs;
// CFCSAbstractDatatype.java

/* ------------------------------------------------------------------------- *\
This software and documentation are provided 'as is' and Tree Star, Inc., its
contractors and partners specifically disclaim all other warranties, expressed
or implied, including but not limited to implied warranties of merchantability
and fitness for a particular purpose, or during any particular date range.

By using this software, you are agreeing to these limits of liability, and to
hold Tree Star harmless for any information, accurate or erroneous, that might
be generated by the program.  This software is intended for research use only.

Christopher Lane <cdl@best.classes> for Tree Star  1/14/2002      Copyright 2002
\* ------------------------------------------------------------------------- */



import java.io.DataOutputStream;
import java.util.ArrayList;
import java.util.List;

public abstract class CFCSAbstractDatatype implements CFCSDatatype, CFCSErrorCodes
{

    protected final List data = new ArrayList();
    protected CFCSDataSizing sizing;

    // --------------------------------------------------------------------

    public final int getCount()
    {
        return data.size();
    }

    // --------------------------------------------------------------------

    public final void setSizingObject(final CFCSDataSizing sizing)
    {
        this.sizing = sizing;
    }

    // --------------------------------------------------------------------

    public void readData(final int index, final byte[][] cinch)
    {
        throw new CFCSError(CFCSNotImplemented);
    }

    // --------------------------------------------------------------------

    public void writeData(final int index, final int count, final DataOutputStream stream)
    {
        throw new CFCSError(CFCSNotImplemented);
    }

    // --------------------------------------------------------------------

    public void getData(final int index, final byte[] array) throws CFCSDataSizeError
    {
        throw new CFCSError(CFCSNotImplemented);
    }

    public void setData(final int index, final byte[] array) throws CFCSDataScaleError
    {
        throw new CFCSError(CFCSNotImplemented);
    }

    public void addData(final byte[] array) throws CFCSDataScaleError
    {
        throw new CFCSError(CFCSNotImplemented);
    }

    // --------------------------------------------------------------------

    public void getData(final int index, final short[] array) throws CFCSDataSizeError
    {
        throw new CFCSError(CFCSNotImplemented);
    }

    public void setData(final int index, final short[] array) throws CFCSDataScaleError
    {
        throw new CFCSError(CFCSNotImplemented);
    }

    public void addData(final short[] array) throws CFCSDataScaleError
    {
        throw new CFCSError(CFCSNotImplemented);
    }

    // --------------------------------------------------------------------

    public void getData(final int index, final int[] array) throws CFCSDataSizeError
    {
        throw new CFCSError(CFCSNotImplemented);
    }

    public void setData(final int index, final int[] array) throws CFCSDataScaleError
    {
        throw new CFCSError(CFCSNotImplemented);
    }

    public void addData(final int[] array) throws CFCSDataScaleError
    {
        throw new CFCSError(CFCSNotImplemented);
    }

    // --------------------------------------------------------------------

    public void getData(final int index, final float[] array) throws CFCSDataChannelError
    {
        throw new CFCSError(CFCSNotImplemented);
    }

    public void setData(final int index, final float[] array) throws CFCSDataChannelError
    {
        throw new CFCSError(CFCSNotImplemented);
    }

    public void addData(final float[] array) throws CFCSDataChannelError
    {
        throw new CFCSError(CFCSNotImplemented);
    }

    // --------------------------------------------------------------------

    public void getData(final int index, final double[] array) throws CFCSDataChannelError
    {
        throw new CFCSError(CFCSNotImplemented);
    }

    public void setData(final int index, final double[] array) throws CFCSDataChannelError
    {
        throw new CFCSError(CFCSNotImplemented);
    }

    public void addData(final double[] array) throws CFCSDataChannelError
    {
        throw new CFCSError(CFCSNotImplemented);
    }

    // --------------------------------------------------------------------

}
